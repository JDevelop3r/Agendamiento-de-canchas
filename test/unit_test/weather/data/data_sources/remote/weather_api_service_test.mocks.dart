// Mocks generated by Mockito 5.4.0 from annotations
// in agendamiento_canchas/test/unit_test/weather/data/data_sources/remote/weather_api_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:agendamiento_canchas/features/weather/data/data_sources/remote/weather_api_service.dart'
    as _i3;
import 'package:agendamiento_canchas/features/weather/data/models/weather_forecast.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:retrofit/retrofit.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpResponse_0<T> extends _i1.SmartFake
    implements _i2.HttpResponse<T> {
  _FakeHttpResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherApiService extends _i1.Mock implements _i3.WeatherApiService {
  MockWeatherApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<
      _i2.HttpResponse<List<_i5.WeatherForecastModel>>> getWeatherForecast({
    double? lat,
    double? lon,
    String? daily = r'precipitation_probability_max',
    String? timezone = r'auto',
    int? cnt = 16,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeatherForecast,
          [],
          {
            #lat: lat,
            #lon: lon,
            #daily: daily,
            #timezone: timezone,
            #cnt: cnt,
          },
        ),
        returnValue:
            _i4.Future<_i2.HttpResponse<List<_i5.WeatherForecastModel>>>.value(
                _FakeHttpResponse_0<List<_i5.WeatherForecastModel>>(
          this,
          Invocation.method(
            #getWeatherForecast,
            [],
            {
              #lat: lat,
              #lon: lon,
              #daily: daily,
              #timezone: timezone,
              #cnt: cnt,
            },
          ),
        )),
      ) as _i4.Future<_i2.HttpResponse<List<_i5.WeatherForecastModel>>>);
}
